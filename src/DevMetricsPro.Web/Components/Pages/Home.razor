@page "/"
@using DevMetricsPro.Web.Services
@inject AuthStateService AuthState
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ILogger<Home> Logger
@inject ISnackbar Snackbar

<PageTitle>Dashboard - DevMetrics Pro</PageTitle>

@if (!_isAuthenticated)
{
    <MudText Typo="Typo.h4" Class="mb-4">Welcome to DevMetrics Pro</MudText>
    <MudText Typo="Typo.body1" Class="mb-4">
        A real-time developer analytics platform for tracking team productivity and code quality.
    </MudText>
    <MudButton Href="/login" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large">
        Get Started
    </MudButton>
}
else
{
    <MudText Typo="Typo.h4" Class="mb-4">Dashboard</MudText>
    
    <MudGrid>
        <MudItem xs="12" sm="6" md="3">
            <MudCard Elevation="2">
                <MudCardContent>
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <div>
                            <MudText Typo="Typo.subtitle2" Color="Color.Secondary">Total Commits</MudText>
                            <MudText Typo="Typo.h4">1,247</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Success" Class="mt-2">
                                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Size="Size.Small" /> +12.5% from last week
                            </MudText>
                        </div>
                        <MudIcon Icon="@Icons.Material.Filled.Code" Size="Size.Large" Color="Color.Primary" />
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard Elevation="2">
                <MudCardContent>
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <div>
                            <MudText Typo="Typo.subtitle2" Color="Color.Secondary">Pull Requests</MudText>
                            <MudText Typo="Typo.h4">89</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Success" Class="mt-2">
                                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Size="Size.Small" /> +8.3% from last week
                            </MudText>
                        </div>
                        <MudIcon Icon="@Icons.Material.Filled.MergeType" Size="Size.Large" Color="Color.Secondary" />
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard Elevation="2">
                <MudCardContent>
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <div>
                            <MudText Typo="Typo.subtitle2" Color="Color.Secondary">Active Developers</MudText>
                            <MudText Typo="Typo.h4">24</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Success" Class="mt-2">
                                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Size="Size.Small" /> +2 this month
                            </MudText>
                        </div>
                        <MudIcon Icon="@Icons.Material.Filled.People" Size="Size.Large" Color="Color.Tertiary" />
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard Elevation="2">
                <MudCardContent>
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <div>
                            <MudText Typo="Typo.subtitle2" Color="Color.Secondary">Code Reviews</MudText>
                            <MudText Typo="Typo.h4">156</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Success" Class="mt-2">
                                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Size="Size.Small" /> +15.2% from last week
                            </MudText>
                        </div>
                        <MudIcon Icon="@Icons.Material.Filled.RateReview" Size="Size.Large" Color="Color.Info" />
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>

    <MudGrid Class="mt-4">
        <MudItem xs="12" md="8">
            <MudCard Elevation="2">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Activity Overview</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Typo="Typo.body2" Color="Color.Secondary" Align="Align.Center" Class="py-8">
                        <MudIcon Icon="@Icons.Material.Filled.ShowChart" Size="Size.Large" Color="Color.Secondary" Class="mb-2" />
                        <br />
                        Chart visualization will be implemented in Sprint 3
                    </MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" md="4">
            <MudCard Elevation="2">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Recent Activity</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudList T="string" Dense="true">
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Code">
                            <MudText Typo="Typo.body2">New commit by Sarah Chen</MudText>
                            <MudText Typo="Typo.caption" Color="Color.Secondary">2 minutes ago</MudText>
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.MergeType">
                            <MudText Typo="Typo.body2">PR #142 merged</MudText>
                            <MudText Typo="Typo.caption" Color="Color.Secondary">15 minutes ago</MudText>
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.RateReview">
                            <MudText Typo="Typo.body2">Code review completed</MudText>
                            <MudText Typo="Typo.caption" Color="Color.Secondary">1 hour ago</MudText>
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.BugReport">
                            <MudText Typo="Typo.body2">Issue #89 closed</MudText>
                            <MudText Typo="Typo.caption" Color="Color.Secondary">3 hours ago</MudText>
                        </MudListItem>
                    </MudList>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
}

@if (_isAuthenticated)
{
    <MudGrid Class="mt-4">
        <MudItem xs="12" md="6">
            <MudCard Elevation="2">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">
                            <MudIcon Icon="@Icons.Custom.Brands.GitHub" Class="mr-2" />
                            GitHub Integration
                        </MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    @if (!isGitHubConnected)
                    {
                        <MudText Typo="Typo.body2" Class="mb-3">
                            Connect your GitHub account to sync repositories and track metrics.
                        </MudText>
                        <MudButton 
                            Variant="Variant.Filled" 
                            Color="Color.Dark" 
                            StartIcon="@Icons.Custom.Brands.GitHub"
                            OnClick="ConnectGitHub"
                            Disabled="isConnectingGitHub">
                            @if (isConnectingGitHub)
                            {
                                <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                                <span>Connecting...</span>
                            }
                            else
                            {
                                <span>Connect GitHub</span>
                            }
                        </MudButton>
                    }
                    else
                    {
                        <MudAlert Severity="Severity.Success" Class="mb-3">
                            ✓ Connected as <strong>@@@githubUsername</strong>
                        </MudAlert>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            Your GitHub account is linked and ready to sync.
                        </MudText>
                    }
                    
                    @if (!string.IsNullOrEmpty(githubConnectedMessage))
                    {
                        <MudAlert Severity="Severity.Info" Class="mt-3">@githubConnectedMessage</MudAlert>
                    }
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
}

@code {
    private bool _isAuthenticated = false;
    private bool isConnectingGitHub = false;
    private bool isGitHubConnected = false;
    private string? githubUsername;
    private string? githubConnectedMessage;

    protected override async Task OnInitializedAsync()
    {
        _isAuthenticated = await AuthState.IsAuthenticatedAsync();
        
        if (_isAuthenticated)
        {
            await CheckGitHubConnectionStatus();
        }
        
        // Check if we were redirected back from GitHub OAuth
        var uri = new Uri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        if (query["github"] == "connected")
        {
            githubConnectedMessage = "GitHub account connected successfully!";
            await CheckGitHubConnectionStatus(); // Refresh status
        }
    }

    private async Task CheckGitHubConnectionStatus()
    {
        try
        {
            var token = await AuthState.GetTokenAsync();
            if (string.IsNullOrEmpty(token))
                return;

            var request = new HttpRequestMessage(HttpMethod.Get, "/api/github/status");
            request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            
            var response = await Http.SendAsync(request);
            if (response.IsSuccessStatusCode)
            {
                var status = await response.Content.ReadFromJsonAsync<GitHubStatusResponse>();
                if (status?.Connected == true)
                {
                    isGitHubConnected = true;
                    githubUsername = status.Username;
                }
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error checking GitHub connection status");
        }
    }

    private async Task ConnectGitHub()
{
    isConnectingGitHub = true;
    
    try
    {
        var token = await AuthState.GetTokenAsync();
        if (string.IsNullOrEmpty(token))
        {
            Snackbar.Add("Please login first", Severity.Warning);
            return;
        }

        // Create request with Authorization header
        var request = new HttpRequestMessage(HttpMethod.Get, "/api/github/authorize");
        request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
        
        var response = await Http.SendAsync(request);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<GitHubAuthResponse>();
            if (result?.AuthorizationUrl != null)
            {
                // Redirect to GitHub authorization page
                Navigation.NavigateTo(result.AuthorizationUrl, forceLoad: true);
            }
        }
        else
        {
            Snackbar.Add("Failed to initiate GitHub connection", Severity.Error);
        }
    }
    catch (Exception ex)
    {
        Logger.LogError(ex, "Error connecting to GitHub");
        Snackbar.Add("Failed to connect to GitHub. Please try again.", Severity.Error);
    }
    finally
    {
        isConnectingGitHub = false;
    }
}

    // Helper classes for deserializing API responses
    private class GitHubAuthResponse
    {
        public string? AuthorizationUrl { get; set; }
    }

    private class GitHubStatusResponse
    {
        public bool Connected { get; set; }
        public string? Username { get; set; }
        public DateTime? ConnectedAt { get; set; }
    }
}